##根据PACKAGE_NAME生成该package的导入文件
##用来支持find_package(package COMPONENTS library1 library2 ...)

##检查CMake版本
if(CMAKE_VERSION VERSION_LESS 3.12)
    message(FATAL_ERROR "@PACKAGE_NAME@ requries at least CMake version 3.12")
endif()

##必须指定组件
if (NOT @PACKAGE_NAME@_FIND_COMPONENTS)
    set(@PACKAGE_NAME@_NOT_FOUND_MESSAGE "The @PACKAGE_NAME@ package requires at least one component")
    set(@PACKAGE_NAME@_FOUND False)
    return()
endif()

##配置find选项
set(_@PACKAGE_NAME@_FIND_PARTS_REQUIRED)
if (@PACKAGE_NAME@_FIND_REQUIRED)
    set(_@PACKAGE_NAME@_FIND_PARTS_REQUIRED REQUIRED)
endif()
set(_@PACKAGE_NAME@_FIND_PARTS_QUIET)
if (@PACKAGE_NAME@_FIND_QUIETLY)
    set(_@PACKAGE_NAME@_FIND_PARTS_QUIET QUIET)
endif()

##获取安装位置(这里是指library_config.cmake存放的上级目录)
get_filename_component(_@PACKAGE_NAME@_install_prefix "${CMAKE_CURRENT_LIST_DIR}/.." ABSOLUTE)

set(_@PACKAGE_NAME@_NOTFOUND_MESSAGE)

##加载请求的组件
foreach(module ${@PACKAGE_NAME@_FIND_COMPONENTS})
    find_package(${module}
        ${_@PACKAGE_NAME@_FIND_PARTS_QUIET}
        ${_@PACKAGE_NAME@_FIND_PARTS_REQUIRED}
        PATHS "${_@PACKAGE_NAME@_install_prefix}"
    )
    if (NOT ${module}_FOUND)
        if (@PACKAGE_NAME@_FIND_REQUIRED_${module})
            set(_@PACKAGE_NAME@_NOTFOUND_MESSAGE "${_@PACKAGE_NAME@_NOTFOUND_MESSAGE}Failed to find @PACKAGE_NAME@ component \"${module}\" config file at \"${_@PACKAGE_NAME@_install_prefix}/${module}/${module}-config.cmake\"\n")
        elseif(NOT @PACKAGE_NAME@_FIND_QUIETLY)
            message(WARNING "Failed to find @PACKAGE_NAME@ component \"${module}\" config file at \"${_@PACKAGE_NAME@_install_prefix}/${module}/${module}-config.cmake\"")
        endif()
    endif()
endforeach()

##设置错误信息
if (_@PACKAGE_NAME@_NOTFOUND_MESSAGE)
    set(@PACKAGE_NAME@_NOT_FOUND_MESSAGE "${_@PACKAGE_NAME@_NOTFOUND_MESSAGE}")
    set(@PACKAGE_NAME@_FOUND False)
endif()